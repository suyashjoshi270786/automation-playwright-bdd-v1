name: Playwright + Cucumber BDD (Allure → Pages)

on:
  push:
    branches: [ develop, main ]     # deploy from these
  pull_request:
    branches: [ develop, main ]     # test only (no deploy)

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Create .env for CI
        run: echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" > .env

      - name: Prepare result dirs
        run: mkdir -p results allure-results

      - name: Run Cucumber Tests
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
        run: npx cucumber-js --config cucumber.cjs --format progress --backtrace

      - name: Generate Allure Report
        if: always()
        run: npx allure-commandline generate ./allure-results --clean --output ./allure-report

      # Artifacts (optional but handy)
      - name: Upload Allure Results (JSON)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Upload Allure HTML (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # Prep Pages artifact (created for both PR and push; deploy happens only on push)
      - name: Configure Pages
        if: always()
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-report

  deploy:
    needs: test
    if: ${{ github.event_name == 'push' }}   # ← only deploy for push events
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
